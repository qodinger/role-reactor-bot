name: Release

on:
  push:
    tags:
      - 'v*'
      - '0.*'
      - '1.*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Lint code
        run: pnpm lint

      - name: Generate Release Notes
        id: release_notes
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/}
          
          # Generate release notes from changelog
          if [[ -f "CHANGELOG.md" ]]; then
            # Find the section for this version
            awk -v version="$VERSION" '
            BEGIN { in_section = 0; found = 0 }
            /^## \['"$VERSION"'\]/ { in_section = 1; found = 1; next }
            /^## \[/ && in_section { in_section = 0; next }
            in_section { print }
            END { if (!found) print "See CHANGELOG.md for detailed changes." }
            ' CHANGELOG.md > release_notes.txt
          else
            echo "See CHANGELOG.md for detailed changes." > release_notes.txt
          fi
          
          # Read the generated notes
          RELEASE_NOTES=$(cat release_notes.txt)
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## What's Changed
            
            ${{ steps.release_notes.outputs.release_notes }}
            
            ---
            
            ## Key Features
            
            - Self-assignable roles through reactions
            - Temporary roles with auto-expiration
            - MongoDB integration with local file backup
            - Docker deployment support
            - Health monitoring and performance metrics
            
            ---
            
            **[View Full Changelog â†’](./CHANGELOG.md)**
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

      - name: Build Complete
        run: |
          echo "Release build completed successfully!" 